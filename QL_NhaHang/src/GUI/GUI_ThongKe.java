/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.MonAnDAO;
import POJO.MonAn;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import POJO.MonAn;

/**
 *
 * @author jamas008
 */
public class GUI_ThongKe extends javax.swing.JFrame {

    static JFreeChart jFreeChart;
    String maNV = "";

    /**
     * Creates new form ThongKe
     */
    public GUI_ThongKe() {
        initComponents();
        this.setLocationRelativeTo(null);

        loadThongKeSoLuongBanDuoc(new Date(2020 - 1900, 1 - 1, 1), new Date(2020 - 1900, 1, 1));
        loadTongTienBanDuoc(new Date(2020 - 1900, 1 - 1, 1), new Date(2020 - 1900, 1, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_soLuong = new javax.swing.JPanel();
        panel_tongTien = new javax.swing.JPanel();
        dateChooser_start = new com.toedter.calendar.JDateChooser();
        dateChooser_end = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        btn_thucHien = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panel_soLuongLayout = new javax.swing.GroupLayout(panel_soLuong);
        panel_soLuong.setLayout(panel_soLuongLayout);
        panel_soLuongLayout.setHorizontalGroup(
            panel_soLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_soLuongLayout.setVerticalGroup(
            panel_soLuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_tongTienLayout = new javax.swing.GroupLayout(panel_tongTien);
        panel_tongTien.setLayout(panel_tongTienLayout);
        panel_tongTienLayout.setHorizontalGroup(
            panel_tongTienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_tongTienLayout.setVerticalGroup(
            panel_tongTienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 321, Short.MAX_VALUE)
        );

        dateChooser_start.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateChooser_startKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateChooser_startKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dateChooser_startKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Đến");

        btn_thucHien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_thucHien.setText("Thực hiện");
        btn_thucHien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thucHienActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Quay lại");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(dateChooser_start, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(dateChooser_end, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(btn_thucHien)
                .addGap(248, 248, 248)
                .addComponent(jButton1)
                .addContainerGap(281, Short.MAX_VALUE))
            .addComponent(panel_soLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_tongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_thucHien, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel_soLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateChooser_start, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateChooser_end, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_thucHien)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panel_tongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_thucHien, jButton1});

        panel_soLuong.getAccessibleContext().setAccessibleName("");
        panel_tongTien.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_thucHienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thucHienActionPerformed
        // TODO add your handling code here:
        Date s = this.dateChooser_start.getDate();
        Date f = this.dateChooser_end.getDate();
        if (s == null || f == null) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn đủ thông số!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (s.compareTo(f) > 0) {
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải bé hơn ngày kết thúc!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        loadThongKeSoLuongBanDuoc(s, f);
        loadTongTienBanDuoc(s, f);
    }//GEN-LAST:event_btn_thucHienActionPerformed

    private void dateChooser_startKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateChooser_startKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_dateChooser_startKeyTyped

    private void dateChooser_startKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateChooser_startKeyPressed
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_dateChooser_startKeyPressed

    private void dateChooser_startKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateChooser_startKeyReleased
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_dateChooser_startKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        home gui = new home();
        gui.setVisible(true);
        gui.setMaNV(maNV);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ThongKe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_ThongKe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_thucHien;
    private com.toedter.calendar.JDateChooser dateChooser_end;
    private com.toedter.calendar.JDateChooser dateChooser_start;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel_soLuong;
    private javax.swing.JPanel panel_tongTien;
    // End of variables declaration//GEN-END:variables

    private void loadThongKeSoLuongBanDuoc(Date s, Date f) {
        MonAnDAO monAnDao = new MonAnDAO();
//        Date s = new Date(2020 - 1900, 1, 1);
//        Date f = new Date(2050 - 1900, 1, 1);
        ArrayList<MonAn> dsMonAn = monAnDao.getThongKeSoLuongBanDuoc(s, f);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (MonAn x : dsMonAn) {
            //System.out.println(x.getMaMonAn());
            dataset.addValue(x.getSoLuong(), "Số lượng", x.getTenMonAn().trim());
        }

        this.jFreeChart = ChartFactory.createBarChart("Biểu đồ thống kê số lượng bán được mỗi món ăn", "Số lượng bán được mỗi món ăn", "", dataset, PlotOrientation.HORIZONTAL, false, true, false);
        CategoryPlot categoryPlot = jFreeChart.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.black);

        //XOÁ BIEU ĐỒ ĐÃ TẠO VÀ ADD MỘT BIỂU ĐỒ VỚI DỮ LIỆU KHÁC
        if (this.panel_soLuong.getComponentCount() > 0) {
            this.panel_soLuong.removeAll();
            this.panel_soLuong.repaint();
        }

        ChartPanel chartPanel = new ChartPanel(jFreeChart);
        this.panel_soLuong.setPreferredSize(new Dimension(1350, 320));
        chartPanel.setSize(new Dimension(1350, 320));
        this.panel_soLuong.add(chartPanel);
    }

//    void loadSoLuongBan(Date s, Date f) {
//        MonAnDAO monAnDao = new MonAnDAO();
////        Date s = new Date(2020 - 1900, 1, 1);
////        Date f = new Date(2050 - 1900, 1, 1);
//        ArrayList<MonAn> dsMonAn = monAnDao.getThongKeSoLuongBanDuoc(s, f);
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        for (MonAn x : dsMonAn) {
//            System.out.println(x.getSoLuong() + "");
//            dataset.addValue(x.getSoLuong(), "Số lượng", x.getTenMonAn().trim());
//        }
//
//        this.jFreeChart = ChartFactory.createBarChart("Biểu đồ thống kê số lượng bán được mỗi món ăn", "Số lượng bán được mỗi món ăn", "", dataset, PlotOrientation.HORIZONTAL, false, true, false);
//        CategoryPlot categoryPlot = jFreeChart.getCategoryPlot();
//        categoryPlot.setRangeGridlinePaint(Color.black);
//
//        this.chartPanel = new ChartPanel(jFreeChart);
//        //XOÁ BIEU ĐỒ ĐÃ TẠO VÀ ADD MỘT BIỂU ĐỒ VỚI DỮ LIỆU KHÁC
//        this.panel_soLuong.removeAll();
//        this.panel_soLuong.repaint();
//
//        this.panel_soLuong.setPreferredSize(new Dimension(1350, 320));
//        chartPanel.setSize(new Dimension(1350, 320));
//        this.panel_soLuong.add(chartPanel);
//    }
    private void loadTongTienBanDuoc(Date s, Date f) {
        MonAnDAO monAnDao = new MonAnDAO();
        ArrayList<MonAn> dsMonAn = monAnDao.getThongKeTienBanDuoc(s, f);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (MonAn x : dsMonAn) {
            dataset.addValue((float) x.getDonGia(), "Tổng tiền", x.getTenMonAn().trim());
        }

        JFreeChart freeChart = ChartFactory.createBarChart("Biểu đồ thống kê tổng tiền bán được mỗi món ăn", "Tổng tiền bán được mỗi món ăn", "", dataset, PlotOrientation.HORIZONTAL, false, true, false);
        CategoryPlot categoryPlot = freeChart.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.black);

        //XOÁ BIEU ĐỒ ĐÃ TẠO VÀ ADD MỘT BIỂU ĐỒ VỚI DỮ LIỆU KHÁC
        if (this.panel_tongTien.getComponentCount() > 0) {
            this.panel_tongTien.removeAll();
            this.panel_tongTien.repaint();
        }

        ChartPanel chartPanel = new ChartPanel(freeChart);
        chartPanel.setSize(new Dimension(this.panel_tongTien.getWidth(), this.panel_tongTien.getHeight()));
        this.panel_tongTien.setPreferredSize(new Dimension(1350, 320));
        chartPanel.setSize(new Dimension(1350, 320));
        this.panel_tongTien.add(chartPanel);
    }
    
    public void setMaNV(String maNV) {
        this.maNV = maNV;
    }

//    private void loadTienBan(Date s, Date f) {
//        MonAnDAO monAnDao = new MonAnDAO();
////        Date s = new Date(2020 - 1900, 1, 1);
////        Date f = new Date(2050 - 1900, 1, 1);
//        ArrayList<MonAn> dsMonAn = monAnDao.getThongKeTienBanDuoc(s, f);
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        for (MonAn x : dsMonAn) {
//            dataset.addValue(x.getDonGia(), "Tổng tiền", x.getTenMonAn().trim());
//        }
//
//        JFreeChart freeChart = ChartFactory.createBarChart("Biểu đồ thống kê tổng tiền bán được mỗi món ăn", "Tổng tiền bán được mỗi món ăn", "", dataset, PlotOrientation.HORIZONTAL, false, true, false);
//        CategoryPlot categoryPlot = freeChart.getCategoryPlot();
//        categoryPlot.setRangeGridlinePaint(Color.black);
//
//        ChartPanel chartPanel = new ChartPanel(freeChart);
//        //XOÁ BIEU ĐỒ ĐÃ TẠO VÀ ADD MỘT BIỂU ĐỒ VỚI DỮ LIỆU KHÁC
//        this.panel_tongTien.removeAll();
//        this.panel_tongTien.repaint();
//
//        chartPanel.setSize(new Dimension(this.panel_tongTien.getWidth(), this.panel_tongTien.getHeight()));
//        this.panel_tongTien.setPreferredSize(new Dimension(1350, 320));
//        chartPanel.setSize(new Dimension(1350, 320));
//        this.panel_tongTien.add(chartPanel);
//    }
}
